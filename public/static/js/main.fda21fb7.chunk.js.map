{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","notes","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addNote","event","preventDefault","noteObject","state","newNote","date","Date","toISOString","Math","random","noteService","setState","handleNoteChange","target","value","toggleVisible","showAll","toggleImportanceOf","find","n","changedNote","objectSpread","map","catch","error","filter","setTimeout","_this2","_this3","notesToShow","components_Notification","components_Note","key","onSubmit","onChange","type","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fda21fb7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n\tconst label = note.important ? 'make not important' : 'make important'\r\n\treturn (\r\n\t\t<li className=\"note\">\r\n\t\t\t{note.content}\r\n\t\t\t<button onClick={toggleImportance}>{label}</button>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }\r\n\r\n// const getAll = () => {\r\n//   const request = axios.get(baseUrl)\r\n//   return request.then(response => { return response.data })\r\n// }\r\n","import React from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\n\r\nimport noteService from './services/notes'\r\n\r\nclass App extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tnotes: [],\r\n\t\t\tnewNote: '',\r\n\t\t\tshowAll: true,\r\n\t\t\terror: null\r\n\t\t}\r\n\t\t//console.log('constructor')\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//console.log('will mount')\r\n\t\tnoteService\r\n\t\t\t.getAll()\r\n\t\t\t.then(response => {\r\n\t\t\t\t//console.log('promise fulfilled')\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tnotes: response\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\taddNote = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\t// console.log(event.target);\r\n\t\tconst noteObject = {\r\n\t\t\tcontent: this.state.newNote,\r\n\t\t\tdate: new Date().toISOString(),\r\n\t\t\timportant: Math.random() > 0.5\r\n\t\t}\r\n\r\n\t\tnoteService\r\n\t\t\t.create(noteObject)\r\n\t\t\t.then(newNote => {\r\n\t\t\t\t//console.log(response)\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tnotes: this.state.notes.concat(newNote),\r\n\t\t\t\t\tnewNote: ''\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t}\r\n\r\n\thandleNoteChange = (event) => {\r\n\t\t//console.log(event.target, event.target.value);\r\n\t\tthis.setState({\r\n\t\t\tnewNote: event.target.value\r\n\t\t})\r\n\t}\r\n\r\n\ttoggleVisible = () => {\r\n\t\tthis.setState({\r\n\t\t\tshowAll: !this.state.showAll\r\n\t\t})\r\n\t}\r\n\r\n\ttoggleImportanceOf = (id) => {\r\n\t\treturn () => {\r\n\t\t\tconst note = this.state.notes.find(n => n.id === id)\r\n\t\t\tconst changedNote = { ...note, important: !note.important }\r\n\r\n\t\t\tnoteService\r\n\t\t\t\t.update(id, changedNote)\r\n\t\t\t\t.then(changedNote => {\r\n\t\t\t\t\t//console.log(response.data)\r\n\t\t\t\t\t//const notes = this.state.notes.filter(n => n.id !== id)\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tnotes: this.state.notes.map(note => note.id !== id ? note : changedNote)\r\n\t\t\t\t\t\t//notes: notes.concat(changedNote) // Appends changed note to end of the list!\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\t//alert(`muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`)\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t notes: this.state.notes.filter(note => note.id !== id),\r\n\t\t\t\t\t\t error: `muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.setState({ error: null })\t\t\r\n\t\t\t\t\t}, 5000)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\t//console.log('render')\r\n\t\t\r\n\t\tconst notesToShow = \r\n\t\t\tthis.state.showAll ?\r\n\t\t\t\tthis.state.notes :\r\n\t\t\t\tthis.state.notes.filter(note => note.important)\r\n\t\t\r\n\t\tconst label = this.state.showAll ? 'vain t채rke채t' : 'kaikki'\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Muistiinpanot</h1>\r\n\t\t\t\t<Notification message={this.state.error} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={this.toggleVisible}>\r\n\t\t\t\t\t\tn채yt채 {label}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{notesToShow.map(note => \r\n\t\t\t\t\t\t<Note \r\n\t\t\t\t\t\t\tkey={note.id} \r\n\t\t\t\t\t\t\tnote={note} \r\n\t\t\t\t\t\t\ttoggleImportance={this.toggleImportanceOf(note.id)} />)}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<form onSubmit={this.addNote}>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tvalue={this.state.newNote}\r\n\t\t\t\t\t\tonChange={this.handleNoteChange} />\r\n\t\t\t\t\t<button type=\"submit\">tallenna</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n\n"],"sourceRoot":""}